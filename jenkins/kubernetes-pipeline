pipeline {
    agent any

    stages {
        stage('Git Clone') {
            steps {
                git branch: 'master', url: 'YOUR_REPO'
            }
        }
        stage('authenticate docker registry') {
            steps {
                
                script {
                    def access_token = sh(script: 'gcloud auth print-access-token', returnStdout: true).trim()
                    sh "docker login -u oauth2accesstoken -p \"$access_token\" asia-east1-docker.pkg.dev"
                    }
               
            }
        }

        stage('Build and push docker image to Artifact Registry') {
            steps {
            
                script {
                    sh 'git clone https://github.com/abdelrhman95/DevOps-Challenge-Demo-Code.git' 
                    dir('DevOps-Challenge-Demo-Code'){

                    sh 'ls -l'
                    sh 'docker build -t asia-east1-docker.pkg.dev/molten-snowfall-401102/my-repository/python-app:1.1  .'
                    sh 'docker push asia-east1-docker.pkg.dev/molten-snowfall-401102/my-repository/python-app:1.1'
                    }
                    sh 'sudo rm -rf DevOps-Challenge-Demo-Code '
                }
                 
            }
            
        }

        stage('apply deployment to GKE cluster') {
            steps {
                
                script {
                sh 'gcloud container clusters get-credentials my-gke-cluster --zone asia-east1 --project "PROJECT_ID"'

                sh 'kubectl apply -f kubernetes/ '
            }
             
            }
        }
    }
}
